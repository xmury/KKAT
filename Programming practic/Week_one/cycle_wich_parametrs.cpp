#include <iostream>

using namespace std;

void task_1(){
    /*
    Написать программу поиска двузначных чисел, 
    обладающих следующим свойством:
    если к сумме цифр числа прибавить квадрат этой суммы,
    то получится снова данное число.
    */

    int a, b, c;
    for ( int i = 10; i <= 99; i++ ){
        a = i % 10; b = i / 10;
        c = (a + b) + (a + b) * (a + b);
        if ( i == c) { cout << i << endl; } 
    }
}

void task_2(){
    /*
    В 1626 году индейцы продали остров Манхеттен за 20 долларов. 
    Если бы эти деньги были помещены в банк на текущий счет
    и ежегодный прирост составлял 4 процента (капитализированный процент),
    то какова была бы стоимость капитала в N-ном году?
    */

    double precent = 0.04; double cash = 20;
    int N; cout << "Input N: "; cin >> N;

    for ( int i = 1626; i < N; i++){
        cash += cash * precent;
    }

    cout << fixed << " Capital: " << cash << endl;
}

void task_3(){
    /*
    Сколько можно купить быков, коров и телят, 
    платя за быка 10 у.е., за корову – 5 у.е., 
    а за теленка – 0,5 у.е., если на 100 у.е. 
    нужно купить 100 голов скота?
    */
    
    int cash = 100;
    double b = 10, k = 5, t = 0.5;

    bool q, w;
    for ( int bk = 1; bk <= 100; bk++ ){
        for ( int kk = 1; kk <= 100; kk++ ){
            for ( int tk = 1; tk <= 100; tk++ ){
                q = (bk + kk + tk) == 100;
                if(q){ 
                    w = (bk * b + kk * k + tk * t) == 100;
                    if(w){ 
                        cout << "Bikow  --> " <<  bk << endl;
                        cout << "Korow  --> " <<  kk << endl;
                        cout << "Telyat -->"  <<  tk << endl;
                        break;
                    }
                }
            }
        }
    }
}

void task_4(){
   /*
   В кинотеатре К рядов кресел. В каждом ряду Х кресел. 
   В каждом последующем на У кресел больше, 
   чем в предыдущем. 
   Стоимость одного места в первом ряду – Р тенге, 
   а в каждом последующем на М тенге меньше, чем в предыдущем. 
   Подсчитать выручку кинотеатра за один сеанс при полностью заполненном зале.
   */

    int SUMM = 0;
    int K, X, Y, P, M; cout << "K, X, Y, P, M --> "; cin >> K >> X >> Y >> P >> M;

    for ( int i = 1; i <= K; i++ ){
        SUMM += X * P;
        P -= M; X += Y;
    }

    cout << "Summ: " << SUMM << endl;
}

void add_task_1(){
    /*
    Индийский математик С. Рамануджан обратил внимание на то, 
    что число 1729 можно представить в виде кубов двух чисел 
    двумя способами. Найдите эти числа. Составить программу, 
    выводящую все различные варианты представления числа х в виде 
    суммы кубов двух чисел.
    */

    int a; cout << "Input Num: "; cin >> a;

    for ( int i = 1; i < a; i++){
        for ( int ii = 1; ii < a; ii++){
            if ( (ii * ii * ii + i * i * i) == a ){
                cout << i << " | " << ii << endl;
            }
        }

        if ( (i + 1) == a ){ cout << "Takix kombinaciy ne najol" << endl;}
    }

}

int simpl_num( int num ){
    for ( int i = 2; i < num; i++ ){
        if ( num % i == 0)  { return 0; }
        if ( (i + 1) == num ){ return 1; }
    }
}

void add_task_2(){
    /*
    Числа близнецы – это простые числа, 
    разность между которыми равна двум. 
    Вывести все числа-близнецы из заданного промежутка.
    */

    int a,b; cout << "Input a and b --> "; cin >> a >> b; 
    
    for ( int ii = b; ii >= a; ii-- ){
        if ( simpl_num(ii) == 1){ 
            if ( simpl_num(ii - 2) == 1){
                cout << ii << " | " << ii - 2 << endl;
            }
        }
    }
}

void hard_task(){
    /*
    В 1202 году итальянский математик Леонард Пизанский (Фибоначчи) предложил такую задачу: 
    пара кроликов каждый месяц дает приплод – двух кроликов (самца и самку), 
    от которых уже через два месяца уже получается новый приплод. 
    Сколько кроликов будет через год, если в начале года имелась одна пара? 
    Согласно условию задачи числа, соответствующие количеству кроликов, которые появляются 
    через каждый месяц, составляют последовательность 1, 1, 2, 3, 5, 8, 13, 21, 34… 
    Составьте программу, позволяющие найти все числа Фибонначи, меньше заданного числа N.
    */

    int N; cout << "Input N: "; cin >> N;

    long int krol = 1, plod = 0, sub = 0;
    for ( int i = 1; i <= N; i++){
        krol += sub;
        cout << i << " | " << krol << endl;;

        sub = plod;
        plod = krol;
    }
}

int main(){
    int a; cout << "Change task: 1, 2, 3, 4; add(5, 6); hard(7): "; cin >> a;

    switch(a){
        case 1:
            task_1(); break;
        
        case 2:
            task_2(); break;
        
        case 3:
            task_3(); break;
        
        case 4:
            task_4(); break;

        case 5:
            add_task_1(); break;
        
        case 6:
            add_task_2(); break;

        case 7:
            hard_task(); break;

        default:
            cout << "Your input are wrong" << endl;
    }

    return 0;
}